#include <stdio.h>
#include <stdlib.h>

#define MAX 5  // maximum queue size

int queue[MAX];
int front = -1, rear = -1;

// Check if queue is empty
int isEmpty() {
    return (front == -1);
}

// Check if queue is full
int isFull() {
    return (rear == MAX - 1);
}

// Insert element into queue
void enqueue(int x) {
    if (isFull()) {
        printf("Overflow: cannot enqueue %d\n", x);
    } else {
        if (front == -1) {
            front = 0;
        }
        queue[++rear] = x;
        printf("%d enqueued.\n", x);
    }
}

// Remove element from queue
void dequeue() {
    if (isEmpty()) {
        printf("Underflow: nothing to dequeue\n");
    } else {
        printf("%d dequeued.\n", queue[front]);
        if (front == rear) {
            front = rear = -1; // reset if queue becomes empty
        } else {
            front++;
        }
    }
}

// Peek the front element
void peek() {
    if (isEmpty()) {
        printf("Queue is empty.\n");
    } else {
        printf("Front element: %d\n", queue[front]);
    }
}

// Display all queue elements
void display() {
    if (isEmpty()) {
        printf("Queue is empty.\n");
    } else {
        printf("Queue elements: ");
        for (int i = front; i <= rear; i++) {
            printf("%d ", queue[i]);
        }
        printf("\n");
    }
}

int main() {
    int choice, val;

    do {
        printf("\n--- Queue Operations (size = %d) ---\n", MAX);
        printf("1) Enqueue\n");
        printf("2) Dequeue\n");
        printf("3) Peek front\n");
        printf("4) Display queue\n");
        printf("5) Exit\n");
        printf("Enter choice: ");
        scanf("%d", &choice);

        switch (choice) {
            case 1:
                printf("Enter value to enqueue: ");
                scanf("%d", &val);
                enqueue(val);
                break;
            case 2:
                dequeue();
                break;
            case 3:
                peek();
                break;
            case 4:
                display();
                break;
            case 5:
                printf("Exiting program.\n");
                break;
            default:
                printf("Invalid choice. Please enter 1â€“5.\n");
        }
    } while (choice != 5);

    return 0;
}
